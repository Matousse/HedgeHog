// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class OptionCreated extends ethereum.Event {
  get params(): OptionCreated__Params {
    return new OptionCreated__Params(this);
  }
}

export class OptionCreated__Params {
  _event: OptionCreated;

  constructor(event: OptionCreated) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get optionId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get strike(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get expiration(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get premium(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get isCall(): boolean {
    return this._event.parameters[5].value.toBoolean();
  }
}

export class OptionExercised extends ethereum.Event {
  get params(): OptionExercised__Params {
    return new OptionExercised__Params(this);
  }
}

export class OptionExercised__Params {
  _event: OptionExercised;

  constructor(event: OptionExercised) {
    this._event = event;
  }

  get optionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get buyer(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OptionsContract extends ethereum.SmartContract {
  static bind(address: Address): OptionsContract {
    return new OptionsContract("OptionsContract", address);
  }
}
